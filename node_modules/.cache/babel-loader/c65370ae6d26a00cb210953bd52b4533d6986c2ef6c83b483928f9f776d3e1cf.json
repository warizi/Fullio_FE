{"ast":null,"code":"var _jsxFileName = \"/Users/jinseunghyeon/Desktop/fullio/src/Components/LoginBox.js\",\n  _s = $RefreshSig$();\nimport InputLogin from './InputLogin';\nimport './loginBox.css';\nimport LoginButton from './LoginButton';\nimport Logo from './Logo';\nimport { useState } from 'react';\nimport WaveA from './WaveA';\nimport './WaveA.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginBox() {\n  _s();\n  const [cancelImgMoveId, setCancelImgMoveId] = useState(0);\n  const [cancelImgMovePw, setCancelImgMovePw] = useState(0);\n  const [textId, setTextId] = useState('');\n  const [textPw, setTextPw] = useState('');\n  const [alertIdPw, setAlertIdPw] = useState('');\n  const [failLoginId, setFailLoginId] = useState('');\n  const [failLoginPw, setFailLoginPw] = useState('');\n  const [classNameWave, setClassNameWave] = useState('');\n  const [pageLoad, setPageLoad] = useState('');\n  const movePage = useNavigate();\n  setTimeout(() => {\n    setPageLoad('page-load');\n  }, 100);\n  // let enterKey = '';\n  // window.addEventListener('keydown', (e) => {\n  //     enterKey = e.key;\n  //     if (enterKey === 'Enter') {\n  //         loginBtn();\n  //     }\n  // });\n  function cancelImgFocusId() {\n    setCancelImgMoveId(1);\n    setFailLoginId('');\n  }\n  function cancelImgBlurId() {\n    setCancelImgMoveId(0);\n  }\n  function cancelImgFocusPw() {\n    setCancelImgMovePw(1);\n    setFailLoginPw('');\n  }\n  function cancelImgBlurPw() {\n    setCancelImgMovePw(0);\n  }\n  function resetTextId(e) {\n    const inputText = e.target.value;\n    setTextId(inputText);\n  }\n  function resetTextPw(e) {\n    const inputText = e.target.value;\n    setTextPw(inputText);\n  }\n  function clearTextId() {\n    setTextId('');\n  }\n  function clearTextPw() {\n    setTextPw('');\n  }\n  function loginBtn() {\n    console.log(textId);\n    console.log(textPw);\n    fetch(\"http://43.200.9.209:8000/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: textId,\n        pw: textPw\n      }),\n      credentials: \"include\"\n    }).then(res => res.json()).then(res => {\n      if (res.success) {\n        setClassNameWave('login-wave');\n        setAlertIdPw('');\n        setTimeout(() => {\n          movePage('/main');\n        }, 1000);\n      } else {\n        setAlertIdPw('아이디/비밀번호를 확인해주세요!');\n        setFailLoginPw('fail-login');\n        setFailLoginId('fail-login');\n        setCancelImgMoveId(2);\n        setCancelImgMovePw(2);\n      }\n    }).catch(error => {\n      console.error(new Error(\"로그인 중 에러 발생\"));\n    });\n  }\n  let pageLoadClass = `login-container ${pageLoad}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: pageLoadClass,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uC624\\uB298\\uC758 \\uB098\\uB97C \\uB2F4\\uC544 \\uB0B4\\uC77C\\uB85C,\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InputLogin, {\n        type: \"text\",\n        className: failLoginId,\n        onClick: clearTextId,\n        onBlur: cancelImgBlurId,\n        onFocus: cancelImgFocusId,\n        value: cancelImgMoveId,\n        text: textId,\n        onChange: resetTextId,\n        children: \"\\uC544\\uC774\\uB514\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InputLogin, {\n        type: \"password\",\n        className: failLoginPw,\n        onClick: clearTextPw,\n        onBlur: cancelImgBlurPw,\n        onFocus: cancelImgFocusPw,\n        value: cancelImgMovePw,\n        text: textPw,\n        onChange: resetTextPw,\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"alertIdPw\",\n        children: alertIdPw\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n        onClick: loginBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WaveA, {\n      className: classNameWave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginBox, \"3lG67mn9z0dedDk1FeKENB9Q4po=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginBox;\nexport default LoginBox;\nvar _c;\n$RefreshReg$(_c, \"LoginBox\");","map":{"version":3,"names":["InputLogin","LoginButton","Logo","useState","WaveA","useNavigate","LoginBox","cancelImgMoveId","setCancelImgMoveId","cancelImgMovePw","setCancelImgMovePw","textId","setTextId","textPw","setTextPw","alertIdPw","setAlertIdPw","failLoginId","setFailLoginId","failLoginPw","setFailLoginPw","classNameWave","setClassNameWave","pageLoad","setPageLoad","movePage","setTimeout","cancelImgFocusId","cancelImgBlurId","cancelImgFocusPw","cancelImgBlurPw","resetTextId","e","inputText","target","value","resetTextPw","clearTextId","clearTextPw","loginBtn","console","log","fetch","method","headers","body","JSON","stringify","user","pw","credentials","then","res","json","success","catch","error","Error","pageLoadClass"],"sources":["/Users/jinseunghyeon/Desktop/fullio/src/Components/LoginBox.js"],"sourcesContent":["import InputLogin from './InputLogin';\nimport './loginBox.css';\nimport LoginButton from './LoginButton';\nimport Logo from './Logo';\nimport { useState } from 'react';\nimport WaveA from './WaveA';\nimport './WaveA.css';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction LoginBox() {\n    const [cancelImgMoveId, setCancelImgMoveId] = useState(0);\n    const [cancelImgMovePw, setCancelImgMovePw] = useState(0);\n    const [textId, setTextId] = useState('');\n    const [textPw, setTextPw] = useState('');\n    const [alertIdPw, setAlertIdPw] = useState('');\n    const [failLoginId, setFailLoginId] = useState('');\n    const [failLoginPw, setFailLoginPw] = useState('');\n    const [classNameWave, setClassNameWave] = useState('');\n    const [pageLoad, setPageLoad] = useState('');\n    const movePage = useNavigate();\n\n    setTimeout(() => {\n    setPageLoad('page-load');\n    }, 100);\n    // let enterKey = '';\n    // window.addEventListener('keydown', (e) => {\n    //     enterKey = e.key;\n    //     if (enterKey === 'Enter') {\n    //         loginBtn();\n    //     }\n    // });\n    function cancelImgFocusId() {\n        setCancelImgMoveId(1);\n        setFailLoginId('');\n    }\n\n    function cancelImgBlurId() {\n        setCancelImgMoveId(0);\n    }\n    function cancelImgFocusPw() {\n        setCancelImgMovePw(1);\n        setFailLoginPw('');\n    }\n\n    function cancelImgBlurPw() {\n        setCancelImgMovePw(0);\n    }\n\n    function resetTextId(e) {\n        const inputText = e.target.value;\n        setTextId(inputText);\n    }\n    function resetTextPw(e) {\n        const inputText = e.target.value;\n        setTextPw(inputText);\n    }\n\n    function clearTextId(){\n        setTextId('');\n    }\n    function clearTextPw() {\n        setTextPw('');\n    }\n\n    function loginBtn() {\n        console.log(textId);\n        console.log(textPw);\n        fetch(\"http://43.200.9.209:8000/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user:textId,\n            pw:textPw\n          }),\n          credentials : \"include\",\n        })\n          .then((res) => res.json())\n          .then((res) => {\n            if(res.success){\n                setClassNameWave('login-wave');\n                setAlertIdPw('');\n                setTimeout(() => {\n                    movePage('/main');\n                }, 1000);\n\n            }else {\n              setAlertIdPw('아이디/비밀번호를 확인해주세요!')\n              setFailLoginPw('fail-login')\n              setFailLoginId('fail-login')\n              setCancelImgMoveId(2)\n              setCancelImgMovePw(2)\n            }\n          })\n          .catch((error) => {\n            console.error(new Error(\"로그인 중 에러 발생\"));\n          });\n    }\n    let pageLoadClass = `login-container ${pageLoad}`;\n    return (\n        <>\n        <div className={pageLoadClass}>\n            <h1>오늘의 나를 담아 내일로,</h1>\n            <Logo />\n            <InputLogin type='text' className={failLoginId} onClick={clearTextId} onBlur={cancelImgBlurId} onFocus={cancelImgFocusId} value={cancelImgMoveId} text={textId} onChange={resetTextId}>아이디</InputLogin>\n            <InputLogin type='password' className={failLoginPw} onClick={clearTextPw} onBlur={cancelImgBlurPw} onFocus={cancelImgFocusPw} value={cancelImgMovePw} text={textPw} onChange={resetTextPw}>비밀번호</InputLogin>\n            <span className='alertIdPw'>{alertIdPw}</span>\n            <LoginButton onClick={loginBtn}/>\n        </div>\n        <WaveA className={classNameWave}/>\n        </>\n    )\n}\n\nexport default LoginBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}