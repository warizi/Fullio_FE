{"ast":null,"code":"var _jsxFileName = \"/Users/jinseunghyeon/\\u1100\\u116A\\u11AB\\u1105\\u1175/\\u110B\\u1165\\u11B8\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/fullio/login/src/LoginBox.js\",\n  _s = $RefreshSig$();\nimport InputLogin from './InputLogin';\nimport './loginBox.css';\nimport LoginButton from './LoginButton';\nimport Logo from './Logo';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginBox() {\n  _s();\n  const [cancelImgMoveId, setCancelImgMoveId] = useState(0);\n  const [cancelImgMovePw, setCancelImgMovePw] = useState(0);\n  const [textId, setTextId] = useState('');\n  const [textPw, setTextPw] = useState('');\n  const [alertIdPw, setAlertIdPw] = useState('');\n  const [failLoginId, setFailLoginId] = useState('');\n  const [failLoginPw, setFailLoginPw] = useState('');\n  const userInfo = [{\n    name: \"진승현\",\n    id: \"승현\",\n    pw: \"1234\"\n  }];\n  function cancelImgFocusId() {\n    setCancelImgMoveId(1);\n    setFailLogin('');\n  }\n  function cancelImgBlurId() {\n    setCancelImgMoveId(0);\n  }\n  function cancelImgFocusPw() {\n    setCancelImgMovePw(1);\n    setFailLogin('');\n  }\n  function cancelImgBlurPw() {\n    setCancelImgMovePw(0);\n  }\n  function resetTextId(e) {\n    const inputText = e.target.value;\n    setTextId(inputText);\n  }\n  function resetTextPw(e) {\n    const inputText = e.target.value;\n    setTextPw(inputText);\n  }\n  function clearTextId() {\n    setTextId('');\n  }\n  function clearTextPw() {\n    setTextPw('');\n  }\n\n  // function loginBtn() {\n  //     if (textId === userInfo[0].id && textPw === userInfo[0].pw){\n  //         alert('로그인 성공!');\n  //     } else {\n  //         setAlertIdPw('아이디/비밀번호를 확인해주세요!');\n  //         setFailLoginId('fail-login');\n  //         setCancelImgMoveId(2);\n  //         setTimeout(() => {\n  //             setAlertIdPw('');\n  //         }, 3000);\n  //     }\n  // }\n  function loginBtn() {\n    if (textId === userInfo[0].id && textPw === userInfo[0].pw) {\n      alert('로그인 성공!');\n    } else if (textId === userInfo[0].id) {\n      setAlertIdPw('아이디를 확인해주세요!');\n      setFailLoginId('fail-login');\n      setCancelImgMoveId(2);\n      setTimeout(() => {\n        setAlertIdPw('');\n      }, 3000);\n    } else {\n      setAlertIdPw('비밀번호를 확인해주세요!');\n      setFailLoginPw('fail-login');\n      setCancelImgMovePw(2);\n      setTimeout(() => {\n        setAlertIdPw('');\n      }, 3000);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC624\\uB298\\uC758 \\uB098\\uB97C \\uB2F4\\uC544 \\uB0B4\\uC77C\\uB85C,\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLogin, {\n      type: \"text\",\n      className: failLoginId,\n      onClick: clearTextId,\n      onBlur: cancelImgBlurId,\n      onFocus: cancelImgFocusId,\n      value: cancelImgMoveId,\n      text: textId,\n      onChange: resetTextId,\n      children: \"\\uC544\\uC774\\uB514\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputLogin, {\n      type: \"password\",\n      className: failLoginPw,\n      onClick: clearTextPw,\n      onBlur: cancelImgBlurPw,\n      onFocus: cancelImgFocusPw,\n      value: cancelImgMovePw,\n      text: textPw,\n      onChange: resetTextPw,\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"alertIdPw\",\n      children: alertIdPw\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginButton, {\n      onClick: loginBtn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginBox, \"qybd20Ts1s1TI45kgns0kj5wSik=\");\n_c = LoginBox;\nexport default LoginBox;\nvar _c;\n$RefreshReg$(_c, \"LoginBox\");","map":{"version":3,"names":["InputLogin","LoginButton","Logo","useState","LoginBox","cancelImgMoveId","setCancelImgMoveId","cancelImgMovePw","setCancelImgMovePw","textId","setTextId","textPw","setTextPw","alertIdPw","setAlertIdPw","failLoginId","setFailLoginId","failLoginPw","setFailLoginPw","userInfo","name","id","pw","cancelImgFocusId","setFailLogin","cancelImgBlurId","cancelImgFocusPw","cancelImgBlurPw","resetTextId","e","inputText","target","value","resetTextPw","clearTextId","clearTextPw","loginBtn","alert","setTimeout"],"sources":["/Users/jinseunghyeon/관리/업프로젝트/fullio/login/src/LoginBox.js"],"sourcesContent":["import InputLogin from './InputLogin';\nimport './loginBox.css';\nimport LoginButton from './LoginButton';\nimport Logo from './Logo';\nimport { useState } from 'react';\n\n\nfunction LoginBox() {\n    const [cancelImgMoveId, setCancelImgMoveId] = useState(0);\n    const [cancelImgMovePw, setCancelImgMovePw] = useState(0);\n    const [textId, setTextId] = useState('');\n    const [textPw, setTextPw] = useState('');\n    const [alertIdPw, setAlertIdPw] = useState('');\n    const [failLoginId, setFailLoginId] = useState('');\n    const [failLoginPw, setFailLoginPw] = useState('');\n\n    const userInfo = [\n        {\n            name: \"진승현\",\n            id: \"승현\",\n            pw: \"1234\",\n        },\n    ];\n\n\n    function cancelImgFocusId() {\n        setCancelImgMoveId(1);\n        setFailLogin('');\n    }\n\n    function cancelImgBlurId() {\n        setCancelImgMoveId(0);\n    }\n    function cancelImgFocusPw() {\n        setCancelImgMovePw(1);\n        setFailLogin('');\n    }\n\n    function cancelImgBlurPw() {\n        setCancelImgMovePw(0);\n    }\n\n    function resetTextId(e) {\n        const inputText = e.target.value;\n        setTextId(inputText);\n    }\n    function resetTextPw(e) {\n        const inputText = e.target.value;\n        setTextPw(inputText);\n    }\n\n    function clearTextId(){\n        setTextId('');\n    }\n    function clearTextPw() {\n        setTextPw('');\n    }\n\n    // function loginBtn() {\n    //     if (textId === userInfo[0].id && textPw === userInfo[0].pw){\n    //         alert('로그인 성공!');\n    //     } else {\n    //         setAlertIdPw('아이디/비밀번호를 확인해주세요!');\n    //         setFailLoginId('fail-login');\n    //         setCancelImgMoveId(2);\n    //         setTimeout(() => {\n    //             setAlertIdPw('');\n    //         }, 3000);\n    //     }\n    // }\n    function loginBtn() {\n        if (textId === userInfo[0].id && textPw === userInfo[0].pw){\n            alert('로그인 성공!');\n        } else if (textId === userInfo[0].id){\n            setAlertIdPw('아이디를 확인해주세요!');\n            setFailLoginId('fail-login');\n            setCancelImgMoveId(2);\n            setTimeout(() => {\n                setAlertIdPw('');\n            }, 3000);\n        } else {\n            setAlertIdPw('비밀번호를 확인해주세요!');\n            setFailLoginPw('fail-login');\n            setCancelImgMovePw(2);\n            setTimeout(() => {\n                setAlertIdPw('');\n            }, 3000);\n\n        }\n    }\n   \n    return (\n        <div className=\"login-container\">\n            <h1>오늘의 나를 담아 내일로,</h1>\n            <Logo />\n            <InputLogin type='text' className={failLoginId} onClick={clearTextId} onBlur={cancelImgBlurId} onFocus={cancelImgFocusId} value={cancelImgMoveId} text={textId} onChange={resetTextId}>아이디</InputLogin>\n            <InputLogin type='password' className={failLoginPw} onClick={clearTextPw} onBlur={cancelImgBlurPw} onFocus={cancelImgFocusPw} value={cancelImgMovePw} text={textPw} onChange={resetTextPw}>비밀번호</InputLogin>\n            <span className='alertIdPw'>{alertIdPw}</span>\n            <LoginButton onClick={loginBtn}/>\n        </div>\n    )\n}\n\nexport default LoginBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}